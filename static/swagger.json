{
  "openapi": "3.0.0",
  "info": {
    "description": "An API that allows user to obtain existing information on drivers and vehicle. Admin can update, delete and add driver and vehicles data. Additionally only admin can view and edit users data",
    "version": "1.0.0",
    "title": "FlaskWebApp",
    "contact": {
      "name": "Mahira",
      "email": "mahirahamzah@gmail.com"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Admin users details"
    },
    {
      "name": "Driver",
      "description": "Drivers informations"
    },
    {
      "name": "Vehicle",
      "description": "Vehicle drives by drivers"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "View all users",
        "description": "This can only be done by the logged in user.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Create new user ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the user that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user with given ID",
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "User id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",

        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user hashed Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/driver": {
      "get": {
        "tags": [
          "Driver"
        ],
        "summary": "View all drivers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Driver"
        ],
        "summary": "Create a new driver",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Create new driver Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Driver"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/driver/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the driver that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Driver"
        ],
        "summary": "Get driver data with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Driver id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Driver not found."
          }
        }
      },
      "put": {
        "summary": "Update driver by ID",
        "description": "This can only be done by the logged in user.",
        "tags": [
          "Driver"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Driver Id",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Driver not found."
          }
        }
      },
      "delete": {
        "summary": "Delete driver by ID",
        "description": "This can only be done by the logged in user.",
        "tags": [
          "Driver"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Driver Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Driver"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Driver not found."
          }
        }
      }
    },
    "/vehicle": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "View all vehicles",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Create a new vehicle",
        "description": "This can only be done by the logged in user.",
        "requestBody": {
          "description": "Create new vehicle post object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/vehicle/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the vehicle that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get vehicle with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Vehicle id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. vehicle not found."
          }
        }
      },
      "put": {
        "summary": "Update vehicle by ID",
        "description": "This can only be done by the logged in user.",
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Vehicle ID",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Vehicle not found."
          }
        }
      },
      "delete": {
        "summary": "Delete vehicle by ID",
        "description": "This can only be done by the logged in user.",
        "tags": [
          "Vehicle"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Vehicle ID",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Vehicle not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "id": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "public_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "string"
          },
          "type": {
            "type": "string",
            "format": "email"
          },
          "platenum": {
            "type": "string",
            "format": "number"
          },
          "capacity": {
            "type": "string",
            "format": "string"
          },
          "driver_id": {
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  }
}
